/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pos.gui;

import com.pos.Settings;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Rafae Waqar Qazi
 */
public class SettingsGUI extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    private Settings settings = new Settings();
    public SettingsGUI() {
        initComponents();
        updateUsersTable();
        updateCategoryTable();
        updateUnitTable();
    }
    //Methods for Updating Tables in GUI
    private void updateUsersTable(){
        try {

        usersTable.setModel(DbUtils.resultSetToTableModel(settings.getUsersTableResult()));
     
        }
        catch(NullPointerException e){
            System.out.println(e.getMessage());
        }
    }
    private void updateCategoryTable(){
        try {
        categoryTable.setModel(DbUtils.resultSetToTableModel(settings.getCategoryTableResult()));  
        }
        catch(NullPointerException e){
            System.out.println(e.getMessage());
        }
    }
    private void updateUnitTable(){
        try {
            unitTable.setModel(DbUtils.resultSetToTableModel(settings.getUnitTableResult()));
 
        }
        catch(NullPointerException e){
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        settingsMainPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        existingPasswordLabel = new javax.swing.JLabel();
        existingUsernameLabel = new javax.swing.JLabel();
        userDeleteButton = new javax.swing.JButton();
        userSaveButton = new javax.swing.JButton();
        existingPasswordField = new javax.swing.JPasswordField();
        userEditButton = new javax.swing.JButton();
        existingUserTypeCBox = new javax.swing.JComboBox<>();
        existingUserTypeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        existingUsernameField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        newUsernameLabel = new javax.swing.JLabel();
        userAddButton = new javax.swing.JButton();
        newUserTypeCBox = new javax.swing.JComboBox<>();
        newPasswordLabel = new javax.swing.JLabel();
        newPasswordField = new javax.swing.JPasswordField();
        newUserTypeLabel = new javax.swing.JLabel();
        newUsernameField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        categoryEditButton = new javax.swing.JButton();
        existingCategoryIDField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        categorySaveButton = new javax.swing.JButton();
        existingCategoryNameField = new javax.swing.JTextField();
        deleteCategoryButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        newCategoryNameField = new javax.swing.JTextField();
        categoryAddButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        unitEditButton = new javax.swing.JButton();
        unitDeleteButton = new javax.swing.JButton();
        unitSaveButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        unitTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        existingUnitIDField = new javax.swing.JTextField();
        existingUnitNameField = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        newUnitNameField = new javax.swing.JTextField();
        unitAddButton = new javax.swing.JButton();
        settings_Background = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        settingsMainPanel.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setOpaque(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Users", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(62, 62, 62))); // NOI18N
        jPanel3.setOpaque(false);

        existingPasswordLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        existingPasswordLabel.setForeground(new java.awt.Color(62, 62, 62));
        existingPasswordLabel.setText("Password:");

        existingUsernameLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        existingUsernameLabel.setForeground(new java.awt.Color(62, 62, 62));
        existingUsernameLabel.setText("Username:");

        userDeleteButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userDeleteButton.setForeground(new java.awt.Color(62, 62, 62));
        userDeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Delete_16px.png"))); // NOI18N
        userDeleteButton.setText("Delete");
        userDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDeleteButtonActionPerformed(evt);
            }
        });

        userSaveButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userSaveButton.setForeground(new java.awt.Color(62, 62, 62));
        userSaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Save_16px.png"))); // NOI18N
        userSaveButton.setText("Save");
        userSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSaveButtonActionPerformed(evt);
            }
        });

        existingPasswordField.setEditable(false);
        existingPasswordField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        existingPasswordField.setForeground(new java.awt.Color(62, 62, 62));

        userEditButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userEditButton.setForeground(new java.awt.Color(62, 62, 62));
        userEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Edit_16px.png"))); // NOI18N
        userEditButton.setText("Edit");
        userEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userEditButtonActionPerformed(evt);
            }
        });

        existingUserTypeCBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        existingUserTypeCBox.setForeground(new java.awt.Color(62, 62, 62));
        existingUserTypeCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Employee" }));

        existingUserTypeLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        existingUserTypeLabel.setForeground(new java.awt.Color(62, 62, 62));
        existingUserTypeLabel.setText("User Type:");

        usersTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        usersTable.setForeground(new java.awt.Color(62, 62, 62));
        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserName", "Password", "UserType"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.setOpaque(false);
        usersTable.setShowHorizontalLines(false);
        usersTable.setShowVerticalLines(false);
        usersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(usersTable);

        existingUsernameField.setEditable(false);
        existingUsernameField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        existingUsernameField.setForeground(new java.awt.Color(62, 62, 62));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(existingUserTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(existingUserTypeCBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(existingUsernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(existingUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(existingPasswordLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(existingPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(userEditButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userSaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userSaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(userDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userEditButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingUsernameLabel)
                    .addComponent(existingUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingPasswordLabel)
                    .addComponent(existingPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingUserTypeLabel)
                    .addComponent(existingUserTypeCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add User", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(62, 62, 62))); // NOI18N
        jPanel4.setOpaque(false);

        newUsernameLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newUsernameLabel.setForeground(new java.awt.Color(62, 62, 62));
        newUsernameLabel.setText("Username:");

        userAddButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userAddButton.setForeground(new java.awt.Color(62, 62, 62));
        userAddButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Add_16px.png"))); // NOI18N
        userAddButton.setText("Add");
        userAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userAddButtonActionPerformed(evt);
            }
        });

        newUserTypeCBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newUserTypeCBox.setForeground(new java.awt.Color(62, 62, 62));
        newUserTypeCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Employee" }));

        newPasswordLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newPasswordLabel.setForeground(new java.awt.Color(62, 62, 62));
        newPasswordLabel.setText("Password:");

        newPasswordField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newPasswordField.setForeground(new java.awt.Color(62, 62, 62));

        newUserTypeLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newUserTypeLabel.setForeground(new java.awt.Color(62, 62, 62));
        newUserTypeLabel.setText("UserType:");

        newUsernameField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newUsernameField.setForeground(new java.awt.Color(62, 62, 62));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newUsernameLabel)
                            .addComponent(newPasswordLabel)
                            .addComponent(newUserTypeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newUserTypeCBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newPasswordField)
                            .addComponent(newUsernameField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(userAddButton)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUsernameLabel)
                    .addComponent(newUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPasswordLabel)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUserTypeLabel)
                    .addComponent(newUserTypeCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        settingsMainPanel.add(jPanel2);
        jPanel2.setBounds(10, 20, 300, 530);

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setOpaque(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(62, 62, 62))); // NOI18N
        jPanel6.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(62, 62, 62));
        jLabel8.setText("Category Name:");

        categoryEditButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        categoryEditButton.setForeground(new java.awt.Color(62, 62, 62));
        categoryEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Edit_16px.png"))); // NOI18N
        categoryEditButton.setText("Edit");
        categoryEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryEditButtonActionPerformed(evt);
            }
        });

        existingCategoryIDField.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(62, 62, 62));
        jLabel7.setText("Category ID:");

        categoryTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CategoryID", "CategoryName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        categoryTable.setOpaque(false);
        categoryTable.setShowHorizontalLines(false);
        categoryTable.setShowVerticalLines(false);
        categoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(categoryTable);

        categorySaveButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        categorySaveButton.setForeground(new java.awt.Color(62, 62, 62));
        categorySaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Save_16px.png"))); // NOI18N
        categorySaveButton.setText("Save");
        categorySaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySaveButtonActionPerformed(evt);
            }
        });

        existingCategoryNameField.setEditable(false);

        deleteCategoryButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        deleteCategoryButton.setForeground(new java.awt.Color(62, 62, 62));
        deleteCategoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Delete_16px.png"))); // NOI18N
        deleteCategoryButton.setText("Delete");
        deleteCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCategoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(categoryEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteCategoryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categorySaveButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(existingCategoryIDField)
                            .addComponent(existingCategoryNameField))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(categoryEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(deleteCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(categorySaveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(existingCategoryIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(existingCategoryNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(62, 62, 62))); // NOI18N
        jPanel7.setOpaque(false);

        newCategoryNameField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newCategoryNameField.setForeground(new java.awt.Color(62, 62, 62));
        newCategoryNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newCategoryNameFieldKeyPressed(evt);
            }
        });

        categoryAddButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        categoryAddButton.setForeground(new java.awt.Color(62, 62, 62));
        categoryAddButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Add_16px.png"))); // NOI18N
        categoryAddButton.setText("Add");
        categoryAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryAddButtonActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(62, 62, 62));
        jLabel9.setText("Category Name:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newCategoryNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(categoryAddButton)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(newCategoryNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(categoryAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 296, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        settingsMainPanel.add(jPanel5);
        jPanel5.setBounds(320, 20, 300, 410);

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.setOpaque(false);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Unit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(62, 62, 62))); // NOI18N
        jPanel9.setForeground(new java.awt.Color(62, 62, 62));
        jPanel9.setOpaque(false);

        unitEditButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unitEditButton.setForeground(new java.awt.Color(62, 62, 62));
        unitEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Edit_16px.png"))); // NOI18N
        unitEditButton.setText("Edit");
        unitEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitEditButtonActionPerformed(evt);
            }
        });

        unitDeleteButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unitDeleteButton.setForeground(new java.awt.Color(62, 62, 62));
        unitDeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Delete_16px.png"))); // NOI18N
        unitDeleteButton.setText("Delete");
        unitDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitDeleteButtonActionPerformed(evt);
            }
        });

        unitSaveButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unitSaveButton.setForeground(new java.awt.Color(62, 62, 62));
        unitSaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Save_16px.png"))); // NOI18N
        unitSaveButton.setText("Save");
        unitSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitSaveButtonActionPerformed(evt);
            }
        });

        unitTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UnitID", "UnitName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        unitTable.setOpaque(false);
        unitTable.setShowHorizontalLines(false);
        unitTable.setShowVerticalLines(false);
        unitTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unitTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(unitTable);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(62, 62, 62));
        jLabel10.setText("Unit ID:");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(62, 62, 62));
        jLabel11.setText("Unit Name:");

        existingUnitIDField.setEditable(false);

        existingUnitNameField.setEditable(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 7, Short.MAX_VALUE)
                        .addComponent(unitEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unitDeleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unitSaveButton))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(16, 16, 16)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(existingUnitIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(existingUnitNameField)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(unitEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(unitDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(unitSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(existingUnitIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(existingUnitNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add Unit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(62, 62, 62))); // NOI18N
        jPanel10.setOpaque(false);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(62, 62, 62));
        jLabel12.setText("Unit Name:");

        newUnitNameField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newUnitNameField.setForeground(new java.awt.Color(62, 62, 62));
        newUnitNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newUnitNameFieldKeyPressed(evt);
            }
        });

        unitAddButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        unitAddButton.setForeground(new java.awt.Color(62, 62, 62));
        unitAddButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/Add_16px.png"))); // NOI18N
        unitAddButton.setText("Add");
        unitAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitAddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newUnitNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(unitAddButton)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(newUnitNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(unitAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        settingsMainPanel.add(jPanel8);
        jPanel8.setBounds(630, 20, 300, 410);

        settings_Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/icons/POS_Settings_Background.jpg"))); // NOI18N
        settingsMainPanel.add(settings_Background);
        settings_Background.setBounds(0, 0, 936, 570);

        jMenu1.setText("Options");

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void userAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userAddButtonActionPerformed
        try {
            String username = newUsernameField.getText();
            String password = new String(newPasswordField.getPassword());
            if (!(username.isEmpty()|| password.isEmpty())) {
                String userType = newUserTypeCBox.getSelectedItem().toString();
                if(settings.addUser(username, password, userType)){
                    JOptionPane.showMessageDialog(null, "User Added Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    updateUsersTable();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Username Already Exists!\nChoose Another","Failed!",JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Please Write UserName And Password to Proceed!","Warning",JOptionPane.WARNING_MESSAGE);
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_userAddButtonActionPerformed

    private void userEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userEditButtonActionPerformed
        try{
            if (!(existingUsernameField.getText().isEmpty()) ) { 
                existingPasswordField.setEditable(true);
                existingPasswordField.requestFocus(); 
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_userEditButtonActionPerformed

    private void userSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSaveButtonActionPerformed
        try{
            if (!(existingUsernameField.getText().isEmpty()) ) {
                String username = existingUsernameField.getText();
                String pass = new String (existingPasswordField.getPassword());
                String type = existingUserTypeCBox.getSelectedItem().toString();
                settings.updateExistingUsers(username,pass,type);
                JOptionPane.showMessageDialog(null, "User's Information Updated Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                updateUsersTable();
                existingUsernameField.setText("");
                existingPasswordField.setText("");
                existingUsernameField.setEditable(false); 
                existingPasswordField.setEditable(false);
            }
            else {
                JOptionPane.showMessageDialog(null, "Cannot Save Information.. Because There isn't any :)","Access Denied!", JOptionPane.WARNING_MESSAGE);
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        

    }//GEN-LAST:event_userSaveButtonActionPerformed

    private void usersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTableMouseClicked
        try {
            int row = usersTable.getSelectedRow();
            String content = (usersTable.getModel().getValueAt(row,0).toString());
            ResultSet result = settings. getResultFromUsersTable(content);
            while(result.next()){
                existingUsernameField.setText(result.getString(1));
                existingPasswordField.setText(result.getString(2));               
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_usersTableMouseClicked

    private void userDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDeleteButtonActionPerformed
        try{
            if (!(existingUsernameField.getText().isEmpty()||existingPasswordField.getPassword().equals(""))) {
                String username = existingUsernameField.getText();
                if (settings.deleteExistingUsers(username)) {
                    JOptionPane.showMessageDialog(null, "User Deleted Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    existingUsernameField.setText("");
                    existingPasswordField.setText("");
                    updateUsersTable(); 
                }
                else{
                    JOptionPane.showMessageDialog(null,"Sorry You cannot Delete Yourself!","Error",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_userDeleteButtonActionPerformed

    private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTableMouseClicked
        try {
            int row = categoryTable.getSelectedRow();
            String catID = (categoryTable.getModel().getValueAt(row,0).toString());
            ResultSet result = settings. getResultFromCategoryTable(catID);
            while(result.next()){
                existingCategoryIDField.setText(result.getString(1));
                existingCategoryNameField.setText(result.getString(2));               
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex,"SQL ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_categoryTableMouseClicked

    private void unitTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unitTableMouseClicked
        try {
            int row = unitTable.getSelectedRow();
            String unitID = (unitTable.getModel().getValueAt(row,0).toString());
            ResultSet result = settings. getResultFromUnitTable(unitID);
            while(result.next()){
                existingUnitIDField.setText(result.getString(1));
                existingUnitNameField.setText(result.getString(2));               
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex,"SQL ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_unitTableMouseClicked

    private void categoryAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryAddButtonActionPerformed
        onCategoryAddKeyPress();

    }//GEN-LAST:event_categoryAddButtonActionPerformed
    private void onCategoryAddKeyPress(){
                try {
            String catname = newCategoryNameField.getText();
            if (!catname.isEmpty()) {
                if(settings.addCategory(catname)){
                    JOptionPane.showMessageDialog(null, "Category Added Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    updateCategoryTable();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Category Already Exists!\nChoose Another","Failed!",JOptionPane.ERROR_MESSAGE);
                }      
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please Write Category Name to Proceed!","Warning",JOptionPane.WARNING_MESSAGE);
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }
    private void unitAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitAddButtonActionPerformed
        onUnitAddKeyPress();
    }//GEN-LAST:event_unitAddButtonActionPerformed
    private void onUnitAddKeyPress(){
        try {
            String unitName = newUnitNameField.getText();
            if (!unitName.isEmpty()) {
                if(settings.addUnit(unitName)){
                    JOptionPane.showMessageDialog(null, "Unit Added Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    updateUnitTable();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Unit Already Exists!\nChoose Another","Failed!",JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please Write Unit Name to Proceed!","Warning",JOptionPane.WARNING_MESSAGE);
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }
    private void categoryEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryEditButtonActionPerformed
        try{
            if (!(existingCategoryNameField.getText().isEmpty()) ) {
                existingCategoryNameField.setEditable(true);
                existingCategoryNameField.requestFocus(); 
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_categoryEditButtonActionPerformed

    private void deleteCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCategoryButtonActionPerformed
        try{
            if (!(categoryTable.getSelectionModel().isSelectionEmpty())) {
                String catName = existingCategoryNameField.getText();
                if(settings.deleteExistingCategory(catName)){
                    JOptionPane.showMessageDialog(null, "Category Deleted Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    existingCategoryIDField.setText("");
                    existingCategoryNameField.setText("");
                    updateCategoryTable();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Cannot Delete Category!\nCategory is Already in use!","Error!",JOptionPane.ERROR_MESSAGE);
                }

            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteCategoryButtonActionPerformed

    private void unitDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitDeleteButtonActionPerformed
        try{
            if (!(existingUnitNameField.getText().equals("") || existingUnitIDField.getText().equals(""))) {  
                String unitName = existingUnitNameField.getText();
                if (settings.deleteExistingUnit(unitName)) {
                    JOptionPane.showMessageDialog(null, "Unit Deleted Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    existingUnitIDField.setText("");
                    existingUnitNameField.setText("");
                    updateUnitTable();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Cannot Delete Unit!\nUnit is Already in use!","Error!",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_unitDeleteButtonActionPerformed

    private void unitEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitEditButtonActionPerformed
        try{
            if (!(existingUnitNameField.getText().isEmpty()) ) {      
                existingUnitNameField.setEditable(true);
                existingUnitNameField.requestFocus(); 
            }
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_unitEditButtonActionPerformed

    private void categorySaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySaveButtonActionPerformed
        try{
            if (!(existingCategoryNameField.getText().isEmpty()) ) {
                String catID = existingCategoryIDField.getText();
                String catName = existingCategoryNameField.getText();
                if(settings.updateExistingCategory(catID,catName)){
                    JOptionPane.showMessageDialog(null, "Category Updated Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    updateCategoryTable();
                    existingCategoryIDField.setText("");
                    existingCategoryNameField.setText("");
                    existingCategoryIDField.setEditable(false); 
                    existingCategoryNameField.setEditable(false);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Category Already Exists","Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "Cannot Save Information.. Because There isn't any :)","Access Denied!", JOptionPane.WARNING_MESSAGE);
            }

        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_categorySaveButtonActionPerformed

    private void unitSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitSaveButtonActionPerformed
        try{
            if (!(existingUnitNameField.getText().isEmpty()) ) {
                String unitID = existingUnitIDField.getText();
                String unitName = existingUnitNameField.getText();
                if(settings.updateExistingUnit(unitID,unitName)){
                    JOptionPane.showMessageDialog(null, "Unit Updated Successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    updateUnitTable();
                    existingUnitIDField.setText("");
                    existingUnitNameField.setText("");
                    existingUnitIDField.setEditable(false); 
                    existingUnitNameField.setEditable(false);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Unit Already Exists!","Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "Cannot Save Information.. Because There isn't any :)","Access Denied!", JOptionPane.WARNING_MESSAGE);
            } 
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User is not Logged-in!","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_unitSaveButtonActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        MainMenuGUI menu = new MainMenuGUI();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void newCategoryNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newCategoryNameFieldKeyPressed
        if (evt.getKeyCode()== evt.VK_ENTER) {
            onCategoryAddKeyPress();
        }
    }//GEN-LAST:event_newCategoryNameFieldKeyPressed

    private void newUnitNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUnitNameFieldKeyPressed
        if (evt.getKeyCode()== evt.VK_ENTER) {
            onUnitAddKeyPress();
        }
    }//GEN-LAST:event_newUnitNameFieldKeyPressed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton categoryAddButton;
    private javax.swing.JButton categoryEditButton;
    private javax.swing.JButton categorySaveButton;
    private javax.swing.JTable categoryTable;
    private javax.swing.JButton deleteCategoryButton;
    private javax.swing.JTextField existingCategoryIDField;
    private javax.swing.JTextField existingCategoryNameField;
    private javax.swing.JPasswordField existingPasswordField;
    private javax.swing.JLabel existingPasswordLabel;
    private javax.swing.JTextField existingUnitIDField;
    private javax.swing.JTextField existingUnitNameField;
    private javax.swing.JComboBox<String> existingUserTypeCBox;
    private javax.swing.JLabel existingUserTypeLabel;
    private javax.swing.JTextField existingUsernameField;
    private javax.swing.JLabel existingUsernameLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField newCategoryNameField;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JTextField newUnitNameField;
    private javax.swing.JComboBox<String> newUserTypeCBox;
    private javax.swing.JLabel newUserTypeLabel;
    private javax.swing.JTextField newUsernameField;
    private javax.swing.JLabel newUsernameLabel;
    private javax.swing.JPanel settingsMainPanel;
    private javax.swing.JLabel settings_Background;
    private javax.swing.JButton unitAddButton;
    private javax.swing.JButton unitDeleteButton;
    private javax.swing.JButton unitEditButton;
    private javax.swing.JButton unitSaveButton;
    private javax.swing.JTable unitTable;
    private javax.swing.JButton userAddButton;
    private javax.swing.JButton userDeleteButton;
    private javax.swing.JButton userEditButton;
    private javax.swing.JButton userSaveButton;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
